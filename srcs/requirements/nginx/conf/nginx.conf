#http://nginx.org/en/docs/beginners_guide.html

server {
	listen     443 ssl;
	listen [::]:443 ssl;
    #server_name corresponds to the domain name we are asked to create
	server_name malatini.42.fr;
    #root where files to be served are
	root /var/www/html/wordpress;

    #Did not see the difference without  (to check)
	ssl on;
	ssl_certificate /etc/nginx/ssl/malatini.42.fr.crt;
	ssl_certificate_key /etc/nginx/ssl/malatini.42.fr.key;

	index index.php index.html index.htm;

    #La TLSv1.3 est plus securisee (et plus utilisee ?) que la v1.2
    #On aurait pu utiliser les deux protocoles mais il me semble qu'ils utilisent le ou dans le sujet
	ssl_protocols TLSv1.3;
	#ssl_prefer_server_ciphers off;

    #Will match all requests but will be used as last resort
	location / {
        try_files $uri $uri/ /index.php?$args;
    }

    #Regex with .php file
    #https://www.journaldev.com/26097/php-fpm-nginx
    #https://www.digitalocean.com/community/tutorials/understanding-and-implementing-fastcgi-proxying-in-nginx
    #nginx n'est pas capable de comprendre les requetes php, il a donc besoin du tiers fast_cgi
    location ~ \.php$ {
            #check the existence of the file before sending it to processor or error out
            try_files $uri =404;
            #used to correctly parse the request so that the processor knows with pieces of the request are the files to run
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            #indicates the main file
            fastcgi_index index.php;   
            #include fastcgi_params;
            #bare minimum
            #va communiquer sur l'ip correspondant a wordpress et sur le port 9000
            fastcgi_pass wordpress:9000;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }

##
#Error management
#

	error_log /var/log/nginx/error.log;
	error_page 500 502 503 504 /50x.html;
}
