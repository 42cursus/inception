
# upstream php {
#     server unix:/tmp/php-cgi.socket;
#     server php:9000;
# }

# #We need to replace the default config files with this file
# #We'll use a docker volume for that
# server {
#     listen 80;
#     server_name wordpress.docker.test;

#     #The root declaration is the most important part
#     root /var/www/html;

#     location / {
#         try_files $uri $uri/ /index.php?$args;
#     }

#     location ~ \.php {
#         include fastcgi.conf;
#         fastcgi_intercept_errors on;
#         fastcgi_pass php;
#     }
# }

#Listening on the only port allowed by 42 subject
#SSL mean Secure Socker Layer -> encrypt datas
#Port 443 -> HTTPS -> traffic securise, cryptage 
server {
    listen 443 ssl;
    listen [::]:443 ssl;#syntax for IPv6

    #We are not allowed to listen on port 80

    server_name malatini.42.fr;

    #This must match with the ssl command in the Dockerfile
    ssl_certificate_key /etc/nginx/ssl/localhost.key;
    ssl_certificate /etc/nginx/ssl/localhost.crt;
    
    #The subject ask explicity these protocoles;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    #Nginx will look for these files
    index index.php indexp.html;
    root /var/www/wordpress;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }
    #regex expression, looking for php files
    location ~ [^/]\.php(/|$) {
            #fast cgi is used for caching php files, make your browsing quicker
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass wordpress:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
}